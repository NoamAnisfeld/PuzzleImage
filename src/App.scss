:root {
	direction: rtl;
	box-sizing: border-box;
}

*, ::before, ::after {
	box-sizing: inherit;
}

body {
	display: flex;
	flex-direction: column;
	align-items: center;
	background: lightblue;
}

h1 {
	text-align: center;
}

#root {
	width: 100%;
}

#app {
	display: grid;
	// flex-direction: column;
	justify-items: center;
	gap: 1em;
}

#settings-panel,
#game-wrapper {
	grid-row: 1 / span 1;
	grid-column: 1 / span 1;
}

#settings-panel {
	z-index: 1;
	// width: 80%;
	height: max-content;
	border: 10px outset;
	border-radius: 25px;
	background: #0af;
	padding: 1em;
	margin: 1em;
	display: grid;
	grid-template-columns: 1fr auto;
	gap: 1em;
	justify-self: start;
}

#controls {
	display: flex;
	flex-direction: column;
	gap: 1em;

	& input,
	& button {
		padding: 0.5em;
	}
}

#game-wrapper {
	margin: 1em auto;
	width: min-content;
	height: min-content;
	border: 20px groove brown;
	border-style: ridge groove groove ridge;
	background-image: repeating-linear-gradient(
			to right,
			blue 0 1px,
			transparent 0 calc(var(--width) / var(--cols) - 1px),
			blue calc(var(--width) / var(--cols))
		),
		repeating-linear-gradient(
			to bottom,
			blue 0 1px,
			transparent 0 calc(var(--height) / var(--rows) - 1px),
			blue calc(var(--height) / var(--rows))
		);

	img {
		max-width: 100%;
		max-height: 100%;
	}
}

#puzzle-frame {
	position: relative;
	width: var(--width);
	height: var(--height);
	background: linear-gradient(#FFF8 0 0), var(--image) 0 0/100%;
}

.image-piece {
	position: absolute;
	left: calc(50% - var(--width) / (2 * var(--cols)));
	background-image: var(--image);
	background-size: var(--width);
	background-origin: border-box;
	background-repeat: no-repeat;
	min-width: 10px;
	min-height: 10px;
	touch-action: none;
	clip-path: path(var(--clip-path));
	// border: var(--EXTRA_SPACE) solid #fff8;
}

.image-piece.selected {
	box-shadow: 0 0 10px blue;
}

.goaway-up {
	transform: translateY(calc(-100% - 100vh));
	transition: transform 1s ease-in-out;
}
